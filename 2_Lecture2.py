# Ход исполнения - Движение исполнения - Оно бывает - ветвящиеся, циклическое, вызов функций.

# Декомпозиция - разделение задачи на подзадачи. Функции.

# Структуры данных. Массивы и т.д.

# Алгоритмы

# Золотой фонд Python

# ПРИСВАИВАНИЕ И КОРТЕЖИ
#  Имя является ссылкой на объект (В Python ссылочная модель данных). Тип принадлежит объекту, а не имени. 

x = 2 + 3
# Питон видит выражение и начинает его анализировать - СПРАВА НА ЛЕВО. В процессе вычисления создаются объекты.  
# 
# 2(int) + 3 (int) = 5 (int). После вычисления, имя x связывается с этим объектом. Потом приходит СБОРЩИК МУСОРА И удалает объекты, на которые нет ссылок - 2 и 3.

y = x

# Будет создано имя y и это имя начнет ссылаться на объект 5. 
# 
# ОБЪЕКТЫ ТИПА ЦЕЛОЕ ЧИСЛО ЯВЛЯЮТСЯ НЕ ИЗМЕНЯЕМЫМИ. 


x += 1

# Создается объект целое число 1, далее происходит вычисление 5 + 1 и создается новый объект 6. x начинает ссылаться на 6. 
print(x) 
print(y)


# У имен, которые ссылаются на объект НЕТ типа. ТИП есть у ОБЪЕКТА. 


x = y = z = 0

# КОРТЕЖНОЕ (множественное) присваивание

x, y, z = 1, 2, 3


# Обмен значений

a = 1
b = 2

a,b = b,a


print(a)
print(b)


# КОРТЕЖИ являются низменяемым типом. 

t = 1,2,3,4,5
print(t)
# Вывести цифры через пробел. То есть распаковать из кортежа и вывести по порядку через пробел. 
print(*t)
print(type(t))

a,b,c,d,e = t

print(c)


a = t[3]

print(a)


# Волшебная звездочка *! v будет равно 1, g равно 2. А остальное будет доступно через rest. 
v,g,*rest = t

print(rest)

*first,h,i = t

print(first)
print(*t, sep=':', end='!\n')


def hello_n(name:str, n:int):

	for i in range(n):
		print(i)
		print(name, ' привет')




hello_n("Vasya", 5)
hello_n("Petya", 3)

list = 'Vika', 7

hello_n(*list)

print(*list)

# Арифметическая прогрессия - ПОПРОСИЛИ? РАЗ и Выдало. Она не хранит каждое число в памяти. Итерируемый объект
sss = range(1, 10)
print(sss)
print(sss[1])

# Распечатать ВСЕ числа через пробел
print(*sss)


# ЦИКЛ for в Python является ЦИКЛОМ ДОСТУПА К ЭЛЕМЕНТАМ ИТЕРИРУЕМОГО ОБЪЕКТА.  SSS должен быть итерируемым объектом. В качестве SSS может выступать любой итерируемый
# объект. Например, КОРТЕЖ. 

for x in sss:
	print('hi')

for x in (1,2,3):
	print(x)

# СПИСОК. Чем отличается список от КОРТЕЖА? Он изменяемый. Он содержит в себе 3 ссылки, в каждую из которых можно положить что угодно.

my_list = [1,2,3]



# СПИСОК КОРТЕЖЕЙ. 3 варианта использования


A = [(1,10), (2,20), (3,30)]

# 1)
# for i in range(len(A)):
# 	angle, length = A[i]
# 	turtle.forward(length)

# 2)

# for T in A:
# 	angle, length = T
# 	turtle.forward(length)

# 3)

# for angle, length in A:
# 	turtle.forward(length)



# СЛОВАРИ И МНОЖЕСТВА (set and dict). Элементы во множествах и словарях не упорядочены. 


city = {'Moscow', 'Spb', 'Nazarovo'}

city.add('Krasnoyarsk')


print(city)

# КЛЮЧ + ЗНАЧЕНИЕ

car = {
	'BMW': 'blue',
	'Volvo': 'green',
	'Sola': 12
}

print(car['BMW'])
print(car['Sola'])


car['Suzuki'] = 'red'

print(car)


for key in car:
	print(car[key])

